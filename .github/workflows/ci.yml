name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser -d testdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7.2.6-alpine
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
      minio:
        image: minio/minio:latest
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        ports:
          - 9000:9000
          - 9001:9001
        run: server /data --console-address ":9001"
        options: >-
          --health-cmd "curl -f http://localhost:9000/minio/health/live || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Create test database
        run: |
          PGPASSWORD=testpass psql -h localhost -U testuser -d testdb -c "CREATE TABLE IF NOT EXISTS usage_events (id SERIAL PRIMARY KEY, user_id VARCHAR(255) NOT NULL);"
      
      - name: Setup MinIO bucket
        run: |
          docker run --network host --rm -e MINIO_ROOT_USER=minioadmin -e MINIO_ROOT_PASSWORD=minioadmin minio/mc mb localhost/test-reports || true
      
      - name: Run unit tests (report service)
        run: npm test -- usage.service.spec.ts
        env:
          POSTGRES_URL: postgres://testuser:testpass@localhost:5432/testdb
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          S3_ENDPOINT: http://localhost:9000
          S3_BUCKET_ID: test-reports
          S3_ACCESS_KEY: minioadmin
          S3_SECRET_KEY: minioadmin
          S3_REGION: us-east-1
          S3_FORCE_PATH_STYLE: 'true'
      
      - name: Run integration tests (async job workflow)
        run: npm test -- usage.integration.spec.ts
        env:
          POSTGRES_URL: postgres://testuser:testpass@localhost:5432/testdb
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          S3_ENDPOINT: http://localhost:9000
          S3_BUCKET_ID: test-reports
          S3_ACCESS_KEY: minioadmin
          S3_SECRET_KEY: minioadmin
          S3_REGION: us-east-1
          S3_FORCE_PATH_STYLE: 'true'

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        
      - name: Run TypeScript type checking
        run: npm run type-check
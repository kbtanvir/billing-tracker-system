server {
    listen 80;
    server_name *.billingsystem.app;

    # Shared Lua code block for subdomain extraction
    set_by_lua_block $subdomain {
        if ngx.var.host:match("^(.*)%.billingsystem%.app$") then
        return ngx.var.host:match("^(.*)%.billingsystem%.app$")
        end
        return ""
    }

    proxy_intercept_errors on;

    set $prefix '';
    set $home '';

    access_by_lua_block {
        local prefix_lookup = require("subdomain_prefix_lookup")
        local prefix, home = prefix_lookup(ngx.var.subdomain)

        if banned then
        ngx.log(ngx.INFO, "User is banned, setting is_banned to 1")
        ngx.var.prefix = "custom"
        ngx.var.home = "403.html"
        return
        end

        if not prefix then
        ngx.log(ngx.ERR, "No prefix found for subdomain: " .. ngx.var.subdomain)
        return ngx.exit(ngx.HTTP_NOT_FOUND)
        end

        ngx.var.prefix = prefix
        if home then
        ngx.var.home = home
        else
        ngx.var.home = "" -- Set empty string if home is nil
        end
    }

    # Root location handler
    location = / {

        proxy_pass http://94.130.228.145:9000/billingsystem/$prefix/$home;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_cache off;

        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # General location handler
    location / {
        proxy_pass http://94.130.228.145:9000/billingsystem/$prefix$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_cache off;

        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Add error handling

    error_page 404 500 502 503 504 403 /404.html;

    location = /404.html {
        proxy_pass http://94.130.228.145:9000/billingsystem/$prefix/404.html;
    }
}
